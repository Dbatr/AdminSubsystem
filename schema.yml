openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /adminka/profile/:
    get:
      operationId: adminka_profile_retrieve
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /adminka/profile/{id}/:
    get:
      operationId: adminka_profile_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /adminka/profile/create/{user_id}/:
    post:
      operationId: adminka_profile_create_create
      description: Создание профиля для указанного пользователя.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: adminka_profile_create_update
      description: Полное обновление профиля указанного пользователя.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: adminka_profile_create_partial_update
      description: Частичное обновление профиля указанного пользователя.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /adminka/profiles/:
    get:
      operationId: adminka_profiles_retrieve
      description: Получение всех профилей.
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /adminka/protected/:
    get:
      operationId: adminka_protected_retrieve
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /adminka/skills/:
    get:
      operationId: adminka_skills_retrieve
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /adminka/skills/{id}/:
    get:
      operationId: adminka_skills_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /adminka/skills/add/:
    post:
      operationId: adminka_skills_add_create
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /adminka/skills/delete/{id}/:
    delete:
      operationId: adminka_skills_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /adminka/users/:
    get:
      operationId: adminka_users_retrieve
      description: Получение всех пользователей.
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /adminka/users/{user_id}/:
    get:
      operationId: adminka_users_retrieve_2
      description: Получение пользователя по ID.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - adminka
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: api_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
